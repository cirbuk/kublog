---
###########################
## Linter GitHub Actions ##
###########################
name: Lint and Test Code Base

#
# Documentation:
# https://help.github.com/en/articles/workflow-syntax-for-github-actions
#

on: [pull_request]


jobs:
  lint:
    name: Lint
    # Set the agent to run on
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python 3.9.2
        uses: actions/setup-python@v2
        with:
          python-version: 3.9.2

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('dev_requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Setup node.js (for pyright)
        uses: actions/setup-node@v1
        with:
          node-version: "12"

      - name: Install Dependencies
        run: |
          pip install pip==20.2.4
          pip install -r dev_requirements.txt
          npm install -g pyright
      - name: Run linter
        run: |
          echo GITHUB_BASE_REF=$GITHUB_BASE_REF
          echo GITHUB_HEAD_REF=$GITHUB_HEAD_REF
          changed_files=$(git diff --name-only origin/$GITHUB_HEAD_REF $(git merge-base origin/$GITHUB_HEAD_REF origin/$GITHUB_BASE_REF))
          filtered_files=$(echo $changed_files | tr ' ' '\n' | grep '.py$' | tr '\n' ' ')
          echo changed_files=$changed_files
          echo filtered_files=$filtered_files
          if [[ $filtered_files ]]
          then
            flake8 $filtered_files
            export PYTHONPATH=./src
            pyright $filtered_files
          fi

  test:
    name: Test
    # Set the agent to run on
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python 3.9.2
        uses: actions/setup-python@v2
        with:
          python-version: 3.9.2

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('dev_requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: Install Dependencies
        run: |
          pip install pip==20.2.4
          pip install -r dev_requirements.txt

      - name: Run tests
        run: |
          export PYTHONPATH=.
          python tests/test.py
      
      - name: Try dummy build
        run: |
          python -m pip install build
          python -m build --sdist --wheel --outdir dist/ .
